#!/bin/bash


LOADDIR=/opt/appnode/images/load
UNLOADDIR=/opt/appnode/images/unload
RUNNDIR=/opt/appnode/images/run
LOCK=/tmp/appnode_lock

acquire_lock()
{
  if (set -o noclobber; echo "$$" > $LOCK) 2> /dev/null;then  
    trap 'rm -f "$LOCK"; exit $?' INT TERM EXIT
    return 0
  else
    return 1
  fi
}

release_lock()
{
  rm -f $LOCK
  trap - INT TERM EXIT
}

#requires docker, md5sum

if [ -z $(which md5sum) ];then
  echo "appnode mgmt error: md5sum not found."
  exit
fi

if [ ! -x /etc/init.d/docker ];then
  echo "appnode mgmt error: /etc/init.d/docker not executable."
  exit
fi

if /etc/init.d/docker status | grep "not running";then
  /etc/init.d/docker start
  sleep 2
fi

if ! acquire_lock ; then
  exit
fi

if [ ! -d $LOADDIR ]; then
  echo "appnode mgmt error: Dir $LOADDIR does not exist."
  exit 1;
fi

imgs=$(docker images -q -f dangling=true)
if [ ! -z $imgs ]; then
  echo "appnode mgmt: removing $imgs ..."
  container=$(docker ps -a | grep $imgs | awk '{ print $1 }')
  docker stop $container
  docker rm $container
  docker rmi $imgs
fi

for i in $(ls $LOADDIR);
do
  if [[ ! $i =~ \.tar$ ]];
  then
    echo "appnode: skipping $i ..."
    continue
  fi
  image=$(echo $i | sed "s/\-/\//g" | sed "s/.tar//g")
  container=$(docker ps -a | grep $image | awk '{ print $1 }')
  if [ -f $RUNNDIR/$i ]; then
    md5=$(md5sum $LOADDIR/$i | awk '{print $1}')
    md5_comp=$(cat $RUNNDIR/$i)
    if [ "$md5_comp" == "$md5" ];then
      echo "appnode mgmt: image checked OK."
      if [ -z "$(docker ps | grep $image)" ];then
        echo "appnode mgmt: attempting to run image."
        docker run -d $image "/opt/run.sh"
      fi
      continue
    else
       echo "appnode mgmt: new file detected." 
    fi
  fi
  md5=$(md5sum $LOADDIR/$i | awk '{print $1}')
  #check to see if the image is still being transferred 
  echo "appnode mgmt: loading new image (writing hash in $RUNNDIR/$i)"
  if [ ! -z "$container" ];then
    docker stop $container
    docker rm $container
    docker rmi $image
  fi
  docker load < $LOADDIR/$i
  docker run -d $image "/opt/run.sh"
  if [ ! -z "$(docker ps | grep $image)" ];then
    echo "RUNNING"
    echo $md5 > $RUNNDIR/$i
  else
    echo "NOT RUNNING"
  fi
done

for i in $(ls $UNLOADDIR);
do
  if [[ ! $i =~ \.tar$ ]];
  then
    echo "appnode: skipping $i ..."
    continue
  fi
  image=$(echo $i | sed "s/\-/\//g" | sed "s/.tar//g")
  container=$(docker ps -a | grep $image | awk '{ print $1 }')
  echo "appnode mgmt: unloading image (using name in $RUNNDIR/$i)"
  if [ ! -z "$container" ];then
    rm -f $LOADDIR/$i
    rm -f $RUNNDIR/$i
    docker stop $container
    docker rm $container
    docker rmi $image
  fi
done



release_lock

echo "appnode mgmt: OK"

